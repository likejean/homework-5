{"version":3,"sources":["components/forms/NewCounterAddButton.js","components/forms/NewCounterNameInput.js","components/counters/panel/ErrorNote.js","components/forms/index.js","components/counters/panel/CounterRangeInput.js","components/counters/panel/DisplayCount.js","components/counters/panel/CounterStepButton.js","components/counters/menu/DeleteCounterButton.js","components/counters/menu/EditCounterNameInput.js","components/counters/menu/ResetCounterButton.js","components/counters/index.js","helpers/CounterRangeValidation.js","components/MainCounterWrapper.js","helpers/NewCounterFormInputValidation.js","App.js","index.js"],"names":["addClick","onClick","inputChange","name","value","data-testid","type","onChange","error","style","color","errors","NewCounterNameInput","ErrorNote","NewCounterAddButton","limit","mode","handleRangeChange","disabled","count","item","sign","handleButtonClick","step","deleteClick","index","id","counterName","handleEditNameChange","handleResetClick","updateClick","resetClick","useState","lower","upper","fieldStatus","rangeLimits","setRangeLimits","setCount","setCounterName","e","target","tempUpper","tempLower","isNaN","Number","isInteger","parseInt","CounterRangeValidation","getAttribute","_","range","map","idx","CounterStepButton","key","CounterRangeInput","DisplayCount","DeleteCounterButton","EditCounterNameInput","ResetCounterButton","counterList","setCounterList","newCounter","setNewCounter","handleEventProps","length","isEmptyValue","NewCounterFormInputValidation","filter","forEach","counter","handleStateProps","className","reduce","accumulator","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b76bbba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ addClick }) => {\r\n    return (\r\n        <button onClick={addClick}>Add</button>\r\n    );\r\n\r\n}","import React from \"react\";\r\n\r\nexport default ({ inputChange, name, value }) => {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                data-testid=\"counter-name-input\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={ name }\r\n                onChange={ inputChange }\r\n            />\r\n\r\n            <input\r\n                data-testid=\"counter-value-input\"\r\n                type=\"text\"\r\n                name=\"value\"\r\n                value={ value }\r\n                onChange={ inputChange }\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ( {error} ) => {\r\n\r\n    return (\r\n\r\n        <span style={{ color: 'red' }}>Error!: {error} </span>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport NewCounterAddButton from \"./NewCounterAddButton\";\r\nimport NewCounterNameInput from \"./NewCounterNameInput\";\r\nimport ErrorNote from \"../counters/panel/ErrorNote\";\r\n\r\nexport default ({ addClick, inputChange, name, value, errors }) => {\r\n    return (\r\n        <div>\r\n            <NewCounterNameInput inputChange={inputChange} name={name} value={value}/>\r\n            {errors.name && <ErrorNote error={errors.name}/>}\r\n            {errors.value && <ErrorNote error={errors.value}/>}\r\n            <br></br>\r\n            <NewCounterAddButton addClick={addClick}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ limit, mode, name, handleRangeChange }) => {\r\n\r\n    return (\r\n        <input\r\n            data-testid=\"limit-input\"\r\n            type=\"text\"\r\n            name={ name }\r\n            value={ limit }\r\n            onChange={ handleRangeChange }\r\n            disabled = { mode }\r\n        />\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ( {count} ) => {\r\n\r\n    return (\r\n\r\n        <span>Counter: {count}</span>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default ({ item, sign, handleButtonClick }) => {\r\n\r\n    return (\r\n        <button onClick={handleButtonClick} step={sign * item}>{ sign * item}</button>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ deleteClick, index }) => {\r\n    return (\r\n        <button id={index} onClick={deleteClick}>Delete</button>\r\n    );\r\n\r\n}","import React from \"react\";\r\n\r\nexport default ({ counterName, handleEditNameChange }) => {\r\n\r\n    return (\r\n        <input\r\n            data-testid=\"limit-input\"\r\n            type=\"text\"\r\n            name=\"edit\"\r\n            value={ counterName }\r\n            onChange={ handleEditNameChange }\r\n        />\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ handleResetClick }) => {\r\n    return (\r\n        <button onClick={handleResetClick}>Reset</button>\r\n    );\r\n\r\n}","import React, { useState } from 'react';\r\nimport CounterRangeValidation from '../../helpers/CounterRangeValidation';\r\nimport _ from 'lodash';\r\nimport CounterRangeInput from \"./panel/CounterRangeInput\";\r\nimport DisplayCount from \"./panel/DisplayCount\";\r\nimport CounterStepButton from \"./panel/CounterStepButton\";\r\nimport ErrorNote from \"./panel/ErrorNote\";\r\nimport DeleteCounterButton from \"./menu/DeleteCounterButton\";\r\nimport EditCounterNameInput from \"./menu/EditCounterNameInput\";\r\nimport ResetCounterButton from \"./menu/ResetCounterButton\";\r\n\r\nexport default ({ id, name, value, deleteClick, updateClick, resetClick }) => {\r\n    const [ rangeLimits, setRangeLimits ] = useState({\r\n        lower : 1,\r\n        upper : 1,\r\n        errors: {\r\n            lower: \"\",\r\n            upper: \"\"\r\n        },\r\n        fieldStatus: {\r\n            upper: false,\r\n            lower: false\r\n        }\r\n    });\r\n    const [count, setCount] = useState(value);\r\n    const [counterName, setCounterName] = useState(name);\r\n\r\n    const handleRangeChange = e => {\r\n        const { name, value } = e.target;\r\n        let errors = rangeLimits.errors;\r\n        let fieldStatus = rangeLimits.fieldStatus;\r\n        setRangeLimits({ ...rangeLimits, [ name ]: +value });\r\n        let tempUpper = rangeLimits[ \"upper\" ];\r\n        let tempLower = rangeLimits[ \"lower\" ];\r\n        CounterRangeValidation (name, value, fieldStatus, tempUpper, tempLower, errors);\r\n    }\r\n\r\n    const handleButtonClick = e => {\r\n        setCount(count + +e.target.getAttribute('step'));\r\n        updateClick(id, count + +e.target.getAttribute('step'));\r\n    }\r\n    const handleResetClick = e => {\r\n        setCount(0);\r\n        resetClick(id, 0);\r\n    }\r\n    const handleEditNameChange = e => setCounterName(e.target.value);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {`${id}. `}{counterName}\r\n                {rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={-1} item={item}/>)}\r\n                <CounterRangeInput limit={rangeLimits.lower} mode={rangeLimits.fieldStatus.lower} name=\"lower\" handleRangeChange={handleRangeChange}/>\r\n                <DisplayCount count={count}/>\r\n                <CounterRangeInput limit={rangeLimits.upper} mode={rangeLimits.fieldStatus.upper} name=\"upper\" handleRangeChange={handleRangeChange}/>\r\n                {rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={1} item={item}/>)}\r\n\r\n                <br></br>\r\n                {rangeLimits.errors.lower && <ErrorNote error={rangeLimits.errors.lower}/>}\r\n                {rangeLimits.errors.upper && <ErrorNote error={rangeLimits.errors.upper}/>}\r\n\r\n            </div>\r\n            <div>\r\n                <DeleteCounterButton index={id} deleteClick={deleteClick}/>\r\n                <EditCounterNameInput handleEditNameChange={handleEditNameChange} counterName={counterName}/>\r\n                <ResetCounterButton handleResetClick={handleResetClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default (name, value, fieldStatus, tempUpper, tempLower, errors) => {\r\n    switch (name) {\r\n        case 'upper':\r\n            errors.upper =\r\n                isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) >= 10\r\n                    ? 'ERROR! Must be less than 10'\r\n                    : parseInt(value) < tempLower\r\n                        ? 'ERROR! Upper Limit Must be GREATER than Lower Limit'\r\n                        : ''\r\n            ;\r\n            fieldStatus.lower =\r\n                parseInt(value) < tempLower\r\n                    ? true\r\n                    : false\r\n            ;\r\n\r\n            break;\r\n        case 'lower':\r\n            errors.lower =\r\n                isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) < 1\r\n                    ? 'ERROR! Must be greater than zero'\r\n                    : parseInt(value) > tempUpper\r\n                        ? 'ERROR! Lower Limit Must be Less than Upper Limit'\r\n                        : ''\r\n            ;\r\n            fieldStatus.upper =\r\n                parseInt(value) > tempUpper\r\n                    ? true\r\n                    : false\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport CounterAddForm from './forms';\r\nimport CounterComponent from \"./counters\";\r\nimport NewCounterFormInputValidation from \"../helpers/NewCounterFormInputValidation\";\r\n\r\nexport default ({ name }) => {\r\n    const [counterList, setCounterList] = useState([\r\n        {\r\n            id: 1,\r\n            name: 'Default Counter',\r\n            value: 0\r\n        }\r\n    ]);\r\n    const [newCounter, setNewCounter] = useState({\r\n        name: 'Counter Name',\r\n        value: 50,\r\n        errors: {\r\n            name: \"\",\r\n            value: \"\"\r\n        }\r\n    });\r\n\r\n\r\n    const handleCounterInfoChange = e => {\r\n        const { name, value } = e.target;\r\n        setNewCounter({...newCounter, [ name ]: value});\r\n        const errors = newCounter.errors;\r\n        NewCounterFormInputValidation(name, value, errors);\r\n    };\r\n\r\n    const handleCounterAddClick = () => setCounterList([\r\n        ...counterList,\r\n        {\r\n            id: counterList.length + 1,\r\n            name: newCounter.name,\r\n            value: newCounter.value\r\n        }]\r\n    );\r\n\r\n    const handleCounterValueUpdate = (id, count) => setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    const handleCounterResetClick = (id, count) =>  setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    const handleCounterDeleteClick = e => {\r\n        setCounterList([...counterList].filter(item => item.id !== +e.target.id));\r\n        counterList.forEach((item, id) => {\r\n            item.id <= +e.target.id ? item.id = id + 1 : item.id = id;\r\n        });\r\n    };\r\n\r\n    //Event & State PROPS\r\n    const handleEventProps = {\r\n        addClick: handleCounterAddClick,\r\n        inputChange: handleCounterInfoChange,\r\n        deleteClick: handleCounterDeleteClick,\r\n        updateClick: handleCounterValueUpdate,\r\n        resetClick: handleCounterResetClick\r\n\r\n\r\n    };\r\n    const handleStateProps = {\r\n        id: newCounter.id,\r\n        name: newCounter.name,\r\n        value: newCounter.value,\r\n        errors: newCounter.errors\r\n    };\r\n\r\n    //Counter JSX\r\n    return (\r\n        <div>\r\n            <h1 className=\"header\">{name}</h1>\r\n            <hr></hr>\r\n            <h3>Total: {counterList.reduce((accumulator, counter) => accumulator + +counter.value, 0)}</h3>\r\n            {counterList.map((counter, idx) =>\r\n                <CounterComponent\r\n                    key={idx}\r\n                    deleteClick={handleEventProps.deleteClick}\r\n                    updateClick={handleEventProps.updateClick}\r\n                    resetClick={handleEventProps.resetClick}\r\n                    id={counter.id}\r\n                    name={counter.name}\r\n                    value={counter.value}\r\n                />)\r\n            }\r\n            <hr></hr>\r\n            <CounterAddForm {...handleEventProps} {...handleStateProps} />\r\n        </div>\r\n    );\r\n}","import {isEmptyValue} from \"enzyme/src/Utils\";\r\n\r\nexport default (name, value, errors) => {\r\n    switch (name) {\r\n        case 'value':\r\n            errors.value = isNaN(value) || Number.isInteger(value) || isEmptyValue(value) || value === \" \"\r\n                ? 'ERROR! Input must be an Integer'\r\n                : ''\r\n            ;\r\n            break;\r\n        case 'name':\r\n\r\n            errors.name = value.length <= 6\r\n                ? 'Counter name should be longer than 6 characters'\r\n                : ''\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport CounterMainWrapper from './components/MainCounterWrapper';\n\nfunction App() {\n    return (\n          <div>\n              <CounterMainWrapper name={\"Counters\"}/>\n          </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}
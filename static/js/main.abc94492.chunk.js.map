{"version":3,"sources":["components/forms/NewCounterAddButton.js","components/forms/NewCounterNameInput.js","components/counters/panel/ErrorNote.js","components/forms/index.js","components/counters/panel/CounterRangeInput.js","components/counters/panel/DisplayCount.js","components/counters/panel/CounterStepButton.js","components/counters/menu/DeleteCounterButton.js","components/counters/menu/EditCounterNameInput.js","components/counters/menu/ResetCounterButton.js","components/counters/panel/CounterStepOptionsButton.js","components/counters/panel/CloseInputRangeButton.js","components/counters/index.js","helpers/CounterRangeValidation.js","components/MainCounterWrapper.js","helpers/NewCounterFormInputValidation.js","App.js","index.js"],"names":["addClick","errorStatus","className","color","rounded","onClick","disabled","inputChange","name","value","data-testid","type","onChange","isNaN","error","style","errors","NewCounterNameInput","NewCounterAddButton","ErrorNote","limit","mode","handleRangeChange","count","item","sign","handleButtonClick","step","deleteClick","index","id","counterName","handleEditNameChange","handleResetClick","stepOptionsClick","outline","inputCloseClick","updateClick","resetClick","updateName","useState","lower","upper","fieldStatus","rangeLimits","setRangeLimits","parseInt","setCount","setCounterName","negative","positive","stepOptionsAvailable","setStepOptionsAvailable","invalidInputError","setInvalidInputError","e","target","tempUpper","tempLower","CounterRangeValidation","handleStepOptionsClick","handleInputCloseClick","console","log","getAttribute","setTimeout","_","range","map","idx","CounterStepButton","key","CounterStepOptionsButton","CounterRangeInput","CloseInputRangeButton","DisplayCount","DeleteCounterButton","EditCounterNameInput","ResetCounterButton","counterList","setCounterList","newCounter","setNewCounter","handleEventProps","length","NewCounterFormInputValidation","filter","forEach","counter","title","handleStateProps","reduce","accumulator","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abc94492.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ addClick, errorStatus }) => <MDBBtn\r\n        className=\"add col-6\"\r\n        color=\"success\"\r\n        rounded\r\n        onClick={addClick}\r\n        disabled={errorStatus}\r\n    >\r\n        Add Counter\r\n</MDBBtn>;","import React from \"react\";\r\n\r\nexport default ({ inputChange, name, value }) => {\r\n    return (\r\n        <div className='col-6 container'>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <label>Enter Counter Title: </label>\r\n                <input\r\n                    data-testid=\"counter-name-input\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    value={ name }\r\n                    onChange={ inputChange }\r\n                />\r\n            </div>\r\n\r\n            <div className='row align-items-center justify-content-center'>\r\n                <label>Enter Initial Count: </label>\r\n                <input\r\n                    data-testid=\"counter-value-input\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    name=\"value\"\r\n                    value={ isNaN(value) ? '' : value }\r\n                    onChange={ inputChange }\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { MDBAlert } from 'mdbreact';\r\n\r\nexport default ( {error} ) => {\r\n    return (\r\n        <MDBAlert className='row align-items-center justify-content-center' color=\"danger\" >\r\n            <span style={{ color: 'red' }}>ERROR: {error} </span>\r\n        </MDBAlert>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport NewCounterAddButton from \"./NewCounterAddButton\";\r\nimport NewCounterNameInput from \"./NewCounterNameInput\";\r\nimport ErrorNote from \"../counters/panel/ErrorNote\";\r\n\r\nexport default ({ addClick, inputChange, name, value, errors }) => {\r\n    return (\r\n        <div className='container'>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <NewCounterNameInput inputChange={inputChange} name={name} value={value}/>\r\n                <br></br>\r\n                <NewCounterAddButton addClick={addClick} errorStatus={errors.name || errors.value ? true : false}/>\r\n            </div>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <div className='container'>\r\n                    <div className='row align-items-center justify-content-center'>\r\n                        {errors.name && <ErrorNote error={errors.name}/>}\r\n                    </div>\r\n                    <div className='row align-items-center justify-content-center'>\r\n                        {errors.value && <ErrorNote error={errors.value}/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ limit, mode, name, handleRangeChange }) => {\r\n    return (\r\n        <input\r\n            data-testid=\"limit-input\"\r\n            type=\"number\"\r\n            name={ name }\r\n            className=\"form-control\"\r\n            value={ isNaN(limit) ? '' : limit }\r\n            onChange={ handleRangeChange }\r\n            disabled = { mode }\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport { MDBBadge } from \"mdbreact\";\r\n\r\nexport default ( {count} ) => <MDBBadge color=\"primary\">{count}</MDBBadge>\r\n\r\n","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ item, sign, handleButtonClick }) => {\r\n\r\n    return (\r\n        <MDBBtn color=\"black\" onClick={handleButtonClick} step={sign * item}>{ sign * item}</MDBBtn>\r\n    );\r\n}","import React from 'react';\r\nimport {MDBBtn} from \"mdbreact\";\r\n\r\nexport default ({ deleteClick, index }) => <MDBBtn\r\n        id={index}\r\n        className=\"delete\"\r\n        color=\"danger\"\r\n        rounded\r\n        onClick={deleteClick}\r\n    >\r\n        Delete\r\n    </MDBBtn>","import React from \"react\";\r\n\r\nexport default ({ index, counterName, handleEditNameChange }) => {\r\n    return (\r\n        <div>\r\n            <label>Edit Counter Title: </label>\r\n            <input\r\n                data-testid=\"limit-input\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"edit\"\r\n                id={ index }\r\n                value={ counterName }\r\n                onChange={ handleEditNameChange }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ handleResetClick }) => <MDBBtn\r\n        className=\"reset\"\r\n        color=\"primary\"\r\n        rounded\r\n        onClick={handleResetClick}\r\n    >\r\n        Reset\r\n    </MDBBtn>;\r\n","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ name, stepOptionsClick }) => {\r\n    return (\r\n        <MDBBtn outline color=\"info\" name={name} onClick={stepOptionsClick}>Change Step Options?</MDBBtn>\r\n    );\r\n}","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ name, inputCloseClick }) => {\r\n\r\n    return (\r\n        <MDBBtn color=\"danger\" rounded outline className=\"close-button\" onClick={inputCloseClick} name={name}>\r\n            X\r\n        </MDBBtn>\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport CounterRangeValidation from '../../helpers/CounterRangeValidation';\r\nimport _ from 'lodash';\r\nimport CounterRangeInput from \"./panel/CounterRangeInput\";\r\nimport DisplayCount from \"./panel/DisplayCount\";\r\nimport CounterStepButton from \"./panel/CounterStepButton\";\r\nimport ErrorNote from \"./panel/ErrorNote\";\r\nimport DeleteCounterButton from \"./menu/DeleteCounterButton\";\r\nimport EditCounterNameInput from \"./menu/EditCounterNameInput\";\r\nimport ResetCounterButton from \"./menu/ResetCounterButton\";\r\nimport CounterStepOptionsButton from \"./panel/CounterStepOptionsButton\";\r\nimport CloseInputRangeButton from \"./panel/CloseInputRangeButton\";\r\n\r\nexport default ({ id, name, value, deleteClick, updateClick, resetClick, updateName }) => {\r\n\r\n    ///////////////////////////////////////HOOKS///////////////////////////////////////\r\n    const [ rangeLimits, setRangeLimits ] = useState({\r\n        lower : 1,\r\n        upper : 3,\r\n        errors: {\r\n            lower: \"\",\r\n            upper: \"\"\r\n        },\r\n        fieldStatus: {\r\n            upper: false,\r\n            lower: false\r\n        }\r\n    });\r\n    const [count, setCount] = useState(parseInt(value));\r\n    const [counterName, setCounterName] = useState(name);\r\n    const [stepOptionsAvailable, setStepOptionsAvailable] = useState({negative: true, positive: true});\r\n    const [invalidInputError, setInvalidInputError] = useState(false);\r\n\r\n    ///////////////////////////////////HANDLERS////////////////////////////////////////\r\n    const handleRangeChange = e => {\r\n        const { name, value } = e.target;\r\n        let errors = rangeLimits.errors;\r\n        let fieldStatus = rangeLimits.fieldStatus;\r\n        setRangeLimits({ ...rangeLimits, [ name ]: parseInt(value) });\r\n        let tempUpper = rangeLimits[ \"upper\" ];\r\n        let tempLower = rangeLimits[ \"lower\" ];\r\n        CounterRangeValidation (name, value, fieldStatus, tempUpper, tempLower, errors);\r\n    }\r\n\r\n    const handleStepOptionsClick = e => setStepOptionsAvailable({...stepOptionsAvailable, [e.target.name] : false });\r\n    const handleInputCloseClick = e => setStepOptionsAvailable({...stepOptionsAvailable, [e.target.name] : true });\r\n\r\n    const handleButtonClick = e => {\r\n        console.log('step', parseInt(e.target.getAttribute('step')));\r\n        if (!isNaN(parseInt(e.target.getAttribute('step')))) {\r\n            setCount(count + parseInt(e.target.getAttribute('step')));\r\n            //Lifting props: updateClick()\r\n            updateClick(id, count + parseInt(e.target.getAttribute('step')));\r\n\r\n        }else{\r\n            setCount(+value);\r\n            setInvalidInputError(true);\r\n        }\r\n    }\r\n    const handleResetClick = e => {\r\n        setCount(0);\r\n        //Lifting props: updateClick()\r\n        resetClick(id, 0);\r\n    }\r\n\r\n    const handleEditNameChange = e => {\r\n        setCounterName(e.target.value);\r\n        //Lifting props: updateName()\r\n        updateName(parseInt(e.target.getAttribute('id')), e.target.value);\r\n    }\r\n\r\n    if (invalidInputError) setTimeout(() => setInvalidInputError(false), 1000);\r\n\r\n    //////////////////////////////////JSX///////////////////////////////////\r\n    return (\r\n        <div className=\"container-fluid counter-wrapper\">\r\n            <div className=\"row align-items-center justify-content-center\"><h3>{`${id}. `}{name}</h3></div>\r\n            <div className=\"row align-items-center justify-content-center\">\r\n                {rangeLimits.lower > 0 && rangeLimits.upper > 0 && rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={-1} item={item}/>)}\r\n                {stepOptionsAvailable.negative\r\n                ?\r\n                    <CounterStepOptionsButton name={\"negative\"} stepOptionsClick={handleStepOptionsClick}/>\r\n                :\r\n                    <>\r\n                        <CounterRangeInput limit={rangeLimits.lower} mode={rangeLimits.fieldStatus.lower} name=\"lower\" handleRangeChange={handleRangeChange}/>\r\n                        <CloseInputRangeButton name={\"negative\"} inputCloseClick={handleInputCloseClick}/>\r\n                    </>\r\n                }\r\n                <DisplayCount count={parseInt(value)}/>\r\n                {stepOptionsAvailable.positive\r\n                    ?\r\n                    <CounterStepOptionsButton name={\"positive\"} stepOptionsClick={handleStepOptionsClick}/>\r\n                    :\r\n                    <>\r\n                        <CloseInputRangeButton name={\"positive\"} inputCloseClick={handleInputCloseClick}/>\r\n                        <CounterRangeInput limit={rangeLimits.upper} mode={rangeLimits.fieldStatus.upper} name=\"upper\" handleRangeChange={handleRangeChange}/>\r\n                    </>\r\n                }\r\n                {rangeLimits.lower > 0 && rangeLimits.upper > 0 && rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={1} item={item}/>)}\r\n\r\n            </div>\r\n            <div className=\"row align-items-center justify-content-center\">{rangeLimits.errors.lower && <ErrorNote error={rangeLimits.errors.lower}/>}</div>\r\n            <div>{invalidInputError && <ErrorNote error={\"Slow down, please!!!\"}/>}</div>\r\n            <div className=\"row align-items-center justify-content-center\">{rangeLimits.errors.upper && <ErrorNote error={rangeLimits.errors.upper}/>}</div>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <DeleteCounterButton index={id} deleteClick={deleteClick}/>\r\n                <EditCounterNameInput index={id} handleEditNameChange={handleEditNameChange} counterName={counterName}/>\r\n                <ResetCounterButton handleResetClick={handleResetClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default (name, value, fieldStatus, tempUpper, tempLower, errors) => {\r\n    switch (name) {\r\n        case 'upper':\r\n            errors.upper =\r\n                isNaN(value) || value === (null || \"\")\r\n                    ? 'Input must be an INTEGER'\r\n                    : parseInt(value) >= 10\r\n                        ? 'Must be less than 10'\r\n                        : parseInt(value) < tempLower\r\n                            ? 'Upper Limit Must be GREATER than Lower Limit'\r\n                            : ''\r\n            ;\r\n            fieldStatus.lower =\r\n                parseInt(value) < tempLower\r\n                    ? true\r\n                    : false\r\n            ;\r\n\r\n            break;\r\n        case 'lower':\r\n            errors.lower =\r\n                isNaN(value) || value === (null || \"\")\r\n                    ? 'Input must be an INTEGER'\r\n                    : parseInt(value) < 1\r\n                        ? 'Must be greater than zero'\r\n                        : parseInt(value) > tempUpper\r\n                            ? 'Lower Limit Must be Less than Upper Limit'\r\n                            : ''\r\n            ;\r\n            fieldStatus.upper =\r\n                parseInt(value) > tempUpper\r\n                    ? true\r\n                    : false\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport CounterAddForm from './forms';\r\nimport CounterComponent from \"./counters\";\r\nimport NewCounterFormInputValidation from \"../helpers/NewCounterFormInputValidation\";\r\n\r\nexport default ({ name }) => {\r\n    ///////////////////////////////////////HOOKS///////////////////////////////////////\r\n    //The counter list state\r\n    const [counterList, setCounterList] = useState([\r\n        {\r\n            id: 1,\r\n            name: 'Default Counter',\r\n            value: 0\r\n        }\r\n    ]);\r\n    //The new counter's state\r\n    const [newCounter, setNewCounter] = useState({\r\n        name: 'Counter Name',\r\n        value: 50,\r\n        errors: {\r\n            name: \"\",\r\n            value: \"\"\r\n        }\r\n    });\r\n\r\n    ///////////////////////////////////HANDLERS////////////////////////////////////////\r\n\r\n    //HANDLER: validates and determines upper and lower counter's range limit\r\n    const handleCounterInfoChange = e => {\r\n        const { name, value } = e.target;\r\n        setNewCounter({...newCounter, [ name ]: value});\r\n        const errors = newCounter.errors;\r\n        NewCounterFormInputValidation(name, value, errors);\r\n    };\r\n\r\n    //HANDLER: adds a new counter to the list\r\n    const handleCounterAddClick = () => setCounterList([\r\n        ...counterList,\r\n        {\r\n            id: counterList.length + 1,\r\n            name: newCounter.name,\r\n            value: newCounter.value\r\n        }]\r\n    );\r\n\r\n    //HANDLER: updates the counter's value\r\n    const handleCounterValueUpdate = (id, count) => setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    //HANDLER: resets the counter's value\r\n    const handleCounterResetClick = (id, count) =>  setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    //HANDLER: removes a counter from the list\r\n    const handleCounterDeleteClick = e => {\r\n        setCounterList([...counterList].filter(item => item.id!== +e.target.id));\r\n        counterList.forEach((item, id) => {\r\n            item.id <= +e.target.id ? item.id = id + 1 : item.id = id;\r\n        });\r\n    };\r\n\r\n    //HANDLER: updates the counter's title\r\n    const handleCounterNameUpdate = (id, title) => setCounterList([...counterList].map(counter =>\r\n        counter.id === id ? { ...counter, name: title } : counter\r\n    ));\r\n\r\n\r\n\r\n\r\n    //////////////////////////////////Event & State PROPS///////////////////////////////////\r\n    const handleEventProps = {\r\n        addClick: handleCounterAddClick,\r\n        inputChange: handleCounterInfoChange,\r\n        deleteClick: handleCounterDeleteClick,\r\n        updateClick: handleCounterValueUpdate,\r\n        resetClick: handleCounterResetClick,\r\n        updateName: handleCounterNameUpdate\r\n\r\n    };\r\n    const handleStateProps = {\r\n        id: newCounter.id,\r\n        name: newCounter.name,\r\n        value: newCounter.value,\r\n        errors: newCounter.errors,\r\n        counterList: counterList\r\n    };\r\n\r\n    ///////////////////////////////////////////JSX/////////////////////////////////////////\r\n    return (\r\n        <div>\r\n            <h1 className=\"header\">{name}</h1>\r\n            <h3 className=\"total-count\">Total: {counterList.reduce((accumulator, counter) => accumulator + +counter.value, 0)}</h3>\r\n            {counterList.map((counter, idx) =>\r\n                <CounterComponent\r\n                    key={idx}\r\n                    deleteClick={handleEventProps.deleteClick}\r\n                    updateClick={handleEventProps.updateClick}\r\n                    resetClick={handleEventProps.resetClick}\r\n                    updateName={handleEventProps.updateName}\r\n                    id={counter.id}\r\n                    name={counter.name}\r\n                    value={counter.value}\r\n                    counterList={counterList}\r\n\r\n                />)\r\n            }\r\n            <hr></hr>\r\n            <CounterAddForm {...handleEventProps} {...handleStateProps} />\r\n            <hr></hr>\r\n        </div>\r\n    );\r\n}","export default (name, value, errors) => {\r\n    switch (name) {\r\n        case 'value':\r\n            errors.value = isNaN(value) || value === \"\"\r\n                ? 'Input must be an Integer'\r\n                : ''\r\n            ;\r\n            break;\r\n        case 'name':\r\n            errors.name = value.length <= 6\r\n                ? 'Counter name should be longer than 6 characters'\r\n                : ''\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport CounterMainWrapper from './components/MainCounterWrapper';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nfunction App() {\n    return (\n          <div>\n              <CounterMainWrapper name={\"Counters\"}/>\n          </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
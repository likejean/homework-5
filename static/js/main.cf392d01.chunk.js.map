{"version":3,"sources":["components/forms/NewCounterAddButton.js","components/forms/NewCounterNameInput.js","components/counters/panel/ErrorNote.js","components/forms/index.js","components/counters/panel/CounterRangeInput.js","components/counters/panel/DisplayCount.js","components/counters/panel/CounterStepButton.js","components/counters/menu/DeleteCounterButton.js","components/counters/menu/EditCounterNameInput.js","components/counters/menu/ResetCounterButton.js","components/counters/panel/CounterStepOptionsButton.js","components/counters/panel/CloseInputRangeButton.js","components/counters/index.js","helpers/CounterRangeValidation.js","components/MainCounterWrapper.js","helpers/NewCounterFormInputValidation.js","App.js","index.js"],"names":["addClick","errorStatus","className","color","rounded","onClick","disabled","inputChange","name","value","data-testid","type","onChange","error","style","errors","NewCounterNameInput","NewCounterAddButton","ErrorNote","limit","mode","handleRangeChange","isNaN","count","item","sign","handleButtonClick","step","deleteClick","index","id","counterName","handleEditNameChange","handleResetClick","stepOptionsClick","outline","inputCloseClick","updateClick","resetClick","updateName","counterList","useState","lower","upper","fieldStatus","rangeLimits","setRangeLimits","setCount","setCounterName","negative","positive","stepOptionsAvailable","setStepOptionsAvailable","e","target","parseInt","tempUpper","tempLower","CounterRangeValidation","handleStepOptionsClick","handleInputCloseClick","getAttribute","_","range","map","idx","CounterStepButton","key","CounterStepOptionsButton","CounterRangeInput","CloseInputRangeButton","DisplayCount","DeleteCounterButton","EditCounterNameInput","ResetCounterButton","setCounterList","newCounter","setNewCounter","handleEventProps","length","NewCounterFormInputValidation","filter","forEach","counter","title","handleStateProps","reduce","accumulator","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf392d01.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ addClick, errorStatus }) => <MDBBtn\r\n    className=\"add col-6\"\r\n    color=\"success\"\r\n    rounded\r\n    onClick={addClick}\r\n    disabled={errorStatus}\r\n>\r\n    Add Counter\r\n</MDBBtn>;","import React from \"react\";\r\n\r\nexport default ({ inputChange, name, value }) => {\r\n\r\n    return (\r\n        <div className='col-6 container'>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <label>Enter Counter Title: </label>\r\n                <input\r\n                    data-testid=\"counter-name-input\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    value={ name }\r\n                    onChange={ inputChange }\r\n                />\r\n            </div>\r\n\r\n            <div className='row align-items-center justify-content-center'>\r\n                <label>Enter Initial Count: </label>\r\n                <input\r\n                    data-testid=\"counter-value-input\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"value\"\r\n                    value={ value }\r\n                    onChange={ inputChange }\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { MDBAlert } from 'mdbreact';\r\n\r\nexport default ( {error} ) => {\r\n    return (\r\n        <MDBAlert className='row align-items-center justify-content-center' color=\"danger\" >\r\n            <span style={{ color: 'red' }}>ERROR: {error} </span>\r\n        </MDBAlert>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport NewCounterAddButton from \"./NewCounterAddButton\";\r\nimport NewCounterNameInput from \"./NewCounterNameInput\";\r\nimport ErrorNote from \"../counters/panel/ErrorNote\";\r\n\r\nexport default ({ addClick, inputChange, name, value, errors }) => {\r\n    return (\r\n        <div className='container'>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <NewCounterNameInput inputChange={inputChange} name={name} value={value}/>\r\n                <br></br>\r\n                <NewCounterAddButton addClick={addClick} errorStatus={errors.name || errors.value ? true : false}/>\r\n            </div>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <div className='container'>\r\n                    <div className='row align-items-center justify-content-center'>\r\n                        {errors.name && <ErrorNote error={errors.name}/>}\r\n                    </div>\r\n                    <div className='row align-items-center justify-content-center'>\r\n                        {errors.value && <ErrorNote error={errors.value}/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ limit, mode, name, handleRangeChange }) => {\r\n    return (\r\n        <input\r\n            data-testid=\"limit-input\"\r\n            type=\"number\"\r\n            name={ name }\r\n            className=\"form-control\"\r\n            value={ isNaN(limit) ? '' : limit }\r\n            onChange={ handleRangeChange }\r\n            disabled = { mode }\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport { MDBBadge } from \"mdbreact\";\r\n\r\nexport default ( {count} ) => <MDBBadge color=\"primary\">{count}</MDBBadge>\r\n\r\n","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ item, sign, handleButtonClick }) => {\r\n\r\n    return (\r\n        <MDBBtn color=\"black\" onClick={handleButtonClick} step={sign * item}>{ sign * item}</MDBBtn>\r\n    );\r\n}","import React from 'react';\r\nimport {MDBBtn} from \"mdbreact\";\r\n\r\nexport default ({ deleteClick, index }) => <MDBBtn\r\n        id={index}\r\n        className=\"delete\"\r\n        color=\"danger\"\r\n        rounded\r\n        onClick={deleteClick}\r\n    >\r\n        Delete\r\n    </MDBBtn>","import React from \"react\";\r\n\r\nexport default ({ index, counterName, handleEditNameChange }) => {\r\n    return (\r\n        <div>\r\n            <label>Edit Counter Title: </label>\r\n            <input\r\n                data-testid=\"limit-input\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"edit\"\r\n                id={ index }\r\n                value={ counterName }\r\n                onChange={ handleEditNameChange }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ handleResetClick }) => <MDBBtn\r\n        className=\"reset\"\r\n        color=\"primary\"\r\n        rounded\r\n        onClick={handleResetClick}\r\n    >\r\n        Reset\r\n    </MDBBtn>;\r\n","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ name, stepOptionsClick }) => {\r\n    return (\r\n        <MDBBtn outline color=\"info\" name={name} onClick={stepOptionsClick}>Change Step Options?</MDBBtn>\r\n    );\r\n}","import React from 'react';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default ({ name, inputCloseClick }) => {\r\n\r\n    return (\r\n        <MDBBtn color=\"danger\" rounded outline className=\"close-button\" onClick={inputCloseClick} name={name}>\r\n            X\r\n        </MDBBtn>\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport CounterRangeValidation from '../../helpers/CounterRangeValidation';\r\nimport _ from 'lodash';\r\nimport CounterRangeInput from \"./panel/CounterRangeInput\";\r\nimport DisplayCount from \"./panel/DisplayCount\";\r\nimport CounterStepButton from \"./panel/CounterStepButton\";\r\nimport ErrorNote from \"./panel/ErrorNote\";\r\nimport DeleteCounterButton from \"./menu/DeleteCounterButton\";\r\nimport EditCounterNameInput from \"./menu/EditCounterNameInput\";\r\nimport ResetCounterButton from \"./menu/ResetCounterButton\";\r\nimport CounterStepOptionsButton from \"./panel/CounterStepOptionsButton\";\r\nimport CloseInputRangeButton from \"./panel/CloseInputRangeButton\";\r\n\r\nexport default ({ id, name, value, deleteClick, updateClick, resetClick, updateName, counterList }) => {\r\n\r\n    ///////////////////////////////////////HOOKS///////////////////////////////////////\r\n    const [ rangeLimits, setRangeLimits ] = useState({\r\n        lower : 1,\r\n        upper : 3,\r\n        errors: {\r\n            lower: \"\",\r\n            upper: \"\"\r\n        },\r\n        fieldStatus: {\r\n            upper: false,\r\n            lower: false\r\n        }\r\n    });\r\n    const [count, setCount] = useState(value);\r\n    const [counterName, setCounterName] = useState(name);\r\n    const [stepOptionsAvailable, setStepOptionsAvailable] = useState({negative: true, positive: true})\r\n\r\n    ///////////////////////////////////HANDLERS////////////////////////////////////////\r\n    const handleRangeChange = e => {\r\n        const { name, value } = e.target;\r\n        let errors = rangeLimits.errors;\r\n        let fieldStatus = rangeLimits.fieldStatus;\r\n        setRangeLimits({ ...rangeLimits, [ name ]: parseInt(value) });\r\n        let tempUpper = rangeLimits[ \"upper\" ];\r\n        let tempLower = rangeLimits[ \"lower\" ];\r\n        CounterRangeValidation (name, value, fieldStatus, tempUpper, tempLower, errors);\r\n    }\r\n\r\n    const handleStepOptionsClick = e => setStepOptionsAvailable({...stepOptionsAvailable, [e.target.name] : false });\r\n    const handleInputCloseClick = e => setStepOptionsAvailable({...stepOptionsAvailable, [e.target.name] : true });\r\n\r\n    const handleButtonClick = e => {\r\n        setCount(count + parseInt(e.target.getAttribute('step')));\r\n        //Lifting props: updateClick()\r\n        updateClick(id, count + parseInt(e.target.getAttribute('step')));\r\n    }\r\n    const handleResetClick = e => {\r\n        setCount(0);\r\n        //Lifting props: updateClick()\r\n        resetClick(id, 0);\r\n    }\r\n\r\n    const handleEditNameChange = e => {\r\n        setCounterName(e.target.value);\r\n        //Lifting props: updateName()\r\n        updateName(parseInt(e.target.getAttribute('id')), e.target.value);\r\n    }\r\n\r\n    //////////////////////////////////JSX///////////////////////////////////\r\n    return (\r\n        <div className=\"container-fluid counter-wrapper\">\r\n            <div className=\"row align-items-center justify-content-center\"><h3>{`${id}. `}{name}</h3></div>\r\n            <div className=\"row align-items-center justify-content-center\">\r\n                {rangeLimits.lower > 0 && rangeLimits.upper > 0 && rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={-1} item={item}/>)}\r\n                {stepOptionsAvailable.negative\r\n                ?\r\n                    <CounterStepOptionsButton name={\"negative\"} stepOptionsClick={handleStepOptionsClick}/>\r\n                :\r\n                    <>\r\n                        <CounterRangeInput limit={rangeLimits.lower} mode={rangeLimits.fieldStatus.lower} name=\"lower\" handleRangeChange={handleRangeChange}/>\r\n                        <CloseInputRangeButton name={\"negative\"} inputCloseClick={handleInputCloseClick}/>\r\n                    </>\r\n                }\r\n                <DisplayCount count={+value}/>\r\n                {stepOptionsAvailable.positive\r\n                    ?\r\n                    <CounterStepOptionsButton name={\"positive\"} stepOptionsClick={handleStepOptionsClick}/>\r\n                    :\r\n                    <>\r\n                        <CloseInputRangeButton name={\"positive\"} inputCloseClick={handleInputCloseClick}/>\r\n                        <CounterRangeInput limit={rangeLimits.upper} mode={rangeLimits.fieldStatus.upper} name=\"upper\" handleRangeChange={handleRangeChange}/>\r\n                    </>\r\n                }\r\n                {rangeLimits.lower > 0 && rangeLimits.upper > 0 && rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={1} item={item}/>)}\r\n\r\n            </div>\r\n            <div className=\"row align-items-center justify-content-center\">{rangeLimits.errors.lower && <ErrorNote error={rangeLimits.errors.lower}/>}</div>\r\n\r\n            <div className=\"row align-items-center justify-content-center\">{rangeLimits.errors.upper && <ErrorNote error={rangeLimits.errors.upper}/>}</div>\r\n            <div className='row align-items-center justify-content-center'>\r\n                <DeleteCounterButton index={id} deleteClick={deleteClick}/>\r\n                <EditCounterNameInput index={id} handleEditNameChange={handleEditNameChange} counterName={counterName}/>\r\n                <ResetCounterButton handleResetClick={handleResetClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default (name, value, fieldStatus, tempUpper, tempLower, errors) => {\r\n    switch (name) {\r\n\r\n        case 'upper':\r\n\r\n            errors.upper =\r\n                isNaN(value) || value === (null || \"\")\r\n                    ? 'Input must be an INTEGER'\r\n                    : parseInt(value) >= 10\r\n                        ? 'Must be less than 10'\r\n                        : parseInt(value) < tempLower\r\n                            ? 'Upper Limit Must be GREATER than Lower Limit'\r\n                            : ''\r\n            ;\r\n            fieldStatus.lower =\r\n                parseInt(value) < tempLower\r\n                    ? true\r\n                    : false\r\n            ;\r\n\r\n            break;\r\n        case 'lower':\r\n            errors.lower =\r\n                isNaN(value) || value === (null || \"\")\r\n                    ? 'Input must be an INTEGER'\r\n                    : parseInt(value) < 1\r\n                        ? 'Must be greater than zero'\r\n                        : parseInt(value) > tempUpper\r\n                            ? 'Lower Limit Must be Less than Upper Limit'\r\n                            : ''\r\n            ;\r\n            fieldStatus.upper =\r\n                parseInt(value) > tempUpper\r\n                    ? true\r\n                    : false\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport CounterAddForm from './forms';\r\nimport CounterComponent from \"./counters\";\r\nimport NewCounterFormInputValidation from \"../helpers/NewCounterFormInputValidation\";\r\n\r\nexport default ({ name }) => {\r\n    ///////////////////////////////////////HOOKS///////////////////////////////////////\r\n    //The counter list state\r\n    const [counterList, setCounterList] = useState([\r\n        {\r\n            id: 1,\r\n            name: 'Default Counter',\r\n            value: 0\r\n        }\r\n    ]);\r\n    //The new counter's state\r\n    const [newCounter, setNewCounter] = useState({\r\n        name: 'Counter Name',\r\n        value: 50,\r\n        errors: {\r\n            name: \"\",\r\n            value: \"\"\r\n        }\r\n    });\r\n\r\n    ///////////////////////////////////HANDLERS////////////////////////////////////////\r\n\r\n    //HANDLER: validates and determines upper and lower counter's range limit\r\n    const handleCounterInfoChange = e => {\r\n        const { name, value } = e.target;\r\n        setNewCounter({...newCounter, [ name ]: value});\r\n        const errors = newCounter.errors;\r\n        NewCounterFormInputValidation(name, value, errors);\r\n    };\r\n\r\n    //HANDLER: adds a new counter to the list\r\n    const handleCounterAddClick = () => setCounterList([\r\n        ...counterList,\r\n        {\r\n            id: counterList.length + 1,\r\n            name: newCounter.name,\r\n            value: newCounter.value\r\n        }]\r\n    );\r\n\r\n    //HANDLER: updates the counter's value\r\n    const handleCounterValueUpdate = (id, count) => setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    //HANDLER: resets the counter's value\r\n    const handleCounterResetClick = (id, count) =>  setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    //HANDLER: removes a counter from the list\r\n    const handleCounterDeleteClick = e => {\r\n        setCounterList([...counterList].filter(item => item.id!== +e.target.id));\r\n        counterList.forEach((item, id) => {\r\n            item.id <= +e.target.id ? item.id = id + 1 : item.id = id;\r\n        });\r\n    };\r\n\r\n    //HANDLER: updates the counter's title\r\n    const handleCounterNameUpdate = (id, title) => setCounterList([...counterList].map(counter =>\r\n        counter.id === id ? { ...counter, name: title } : counter\r\n    ));\r\n\r\n\r\n\r\n\r\n    //////////////////////////////////Event & State PROPS///////////////////////////////////\r\n    const handleEventProps = {\r\n        addClick: handleCounterAddClick,\r\n        inputChange: handleCounterInfoChange,\r\n        deleteClick: handleCounterDeleteClick,\r\n        updateClick: handleCounterValueUpdate,\r\n        resetClick: handleCounterResetClick,\r\n        updateName: handleCounterNameUpdate\r\n\r\n    };\r\n    const handleStateProps = {\r\n        id: newCounter.id,\r\n        name: newCounter.name,\r\n        value: newCounter.value,\r\n        errors: newCounter.errors,\r\n        counterList: counterList\r\n    };\r\n\r\n    ///////////////////////////////////////////JSX/////////////////////////////////////////\r\n    return (\r\n        <div>\r\n            <h1 className=\"header\">{name}</h1>\r\n            <h3 className=\"total-count\">Total: {counterList.reduce((accumulator, counter) => accumulator + +counter.value, 0)}</h3>\r\n            {counterList.map((counter, idx) =>\r\n                <CounterComponent\r\n                    key={idx}\r\n                    deleteClick={handleEventProps.deleteClick}\r\n                    updateClick={handleEventProps.updateClick}\r\n                    resetClick={handleEventProps.resetClick}\r\n                    updateName={handleEventProps.updateName}\r\n                    id={counter.id}\r\n                    name={counter.name}\r\n                    value={counter.value}\r\n                    counterList={counterList}\r\n\r\n                />)\r\n            }\r\n            <hr></hr>\r\n            <CounterAddForm {...handleEventProps} {...handleStateProps} />\r\n            <hr></hr>\r\n        </div>\r\n    );\r\n}","import {isEmptyValue} from \"enzyme/src/Utils\";\r\n\r\nexport default (name, value, errors) => {\r\n    switch (name) {\r\n        case 'value':\r\n            errors.value = isNaN(value) || value === (null || \"\")\r\n                ? 'Input must be an Integer'\r\n                : ''\r\n            ;\r\n            break;\r\n        case 'name':\r\n            errors.name = value.length <= 6\r\n                ? 'Counter name should be longer than 6 characters'\r\n                : ''\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport CounterMainWrapper from './components/MainCounterWrapper';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nfunction App() {\n    return (\n          <div>\n              <CounterMainWrapper name={\"Counters\"}/>\n          </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
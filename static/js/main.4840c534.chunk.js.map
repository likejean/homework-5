{"version":3,"sources":["components/forms/NewCounterAddButton.js","components/forms/NewCounterNameInput.js","components/counters/panel/ErrorNote.js","components/forms/index.js","components/counters/panel/CounterRangeInput.js","components/counters/panel/DisplayCount.js","components/counters/panel/CounterStepButton.js","components/counters/menu/DeleteCounterButton.js","components/counters/menu/EditCounterNameInput.js","components/counters/menu/ResetCounterButton.js","components/counters/panel/CounterStepOptionsButton.js","components/counters/panel/CloseInputRangeButton.js","components/counters/index.js","helpers/CounterRangeValidation.js","components/MainCounterWrapper.js","helpers/NewCounterFormInputValidation.js","App.js","index.js"],"names":["addClick","errorStatus","onClick","disabled","inputChange","name","value","data-testid","type","onChange","error","style","color","errors","NewCounterNameInput","ErrorNote","NewCounterAddButton","limit","mode","handleRangeChange","count","item","sign","handleButtonClick","step","deleteClick","index","id","counterName","handleEditNameChange","handleResetClick","stepOptionsClick","inputCloseClick","updateClick","resetClick","useState","lower","upper","fieldStatus","rangeLimits","setRangeLimits","setCount","setCounterName","negative","positive","stepOptionsAvailable","setStepOptionsAvailable","e","target","tempUpper","tempLower","isNaN","Number","isInteger","parseInt","CounterRangeValidation","handleStepOptionsClick","handleInputCloseClick","console","log","getAttribute","_","range","map","idx","CounterStepButton","key","CounterStepOptionsButton","CounterRangeInput","CloseInputRangeButton","DisplayCount","DeleteCounterButton","EditCounterNameInput","ResetCounterButton","counterList","setCounterList","newCounter","setNewCounter","handleEventProps","length","isEmptyValue","NewCounterFormInputValidation","filter","forEach","counter","handleStateProps","className","reduce","accumulator","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4840c534.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ addClick, errorStatus }) => {\r\n    return (\r\n        <button onClick={addClick} disabled={errorStatus}>Add</button>\r\n    );\r\n\r\n}","import React from \"react\";\r\n\r\nexport default ({ inputChange, name, value }) => {\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                data-testid=\"counter-name-input\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={ name }\r\n                onChange={ inputChange }\r\n            />\r\n\r\n            <input\r\n                data-testid=\"counter-value-input\"\r\n                type=\"text\"\r\n                name=\"value\"\r\n                value={ value }\r\n                onChange={ inputChange }\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ( {error} ) => {\r\n\r\n    return (\r\n\r\n        <span style={{ color: 'red' }}>Error!: {error} </span>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport NewCounterAddButton from \"./NewCounterAddButton\";\r\nimport NewCounterNameInput from \"./NewCounterNameInput\";\r\nimport ErrorNote from \"../counters/panel/ErrorNote\";\r\n\r\nexport default ({ addClick, inputChange, name, value, errors }) => {\r\n    return (\r\n        <div>\r\n            <NewCounterNameInput inputChange={inputChange} name={name} value={value}/>\r\n            {errors.name && <ErrorNote error={errors.name}/>}\r\n            {errors.value && <ErrorNote error={errors.value}/>}\r\n            <br></br>\r\n            <NewCounterAddButton addClick={addClick} errorStatus={errors.name || errors.value ? true : false}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ limit, mode, name, handleRangeChange }) => {\r\n\r\n    return (\r\n        <input\r\n            data-testid=\"limit-input\"\r\n            type=\"text\"\r\n            name={ name }\r\n            value={ limit }\r\n            onChange={ handleRangeChange }\r\n            disabled = { mode }\r\n        />\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ( {count} ) => {\r\n\r\n    return (\r\n\r\n        <span>Counter: {count}</span>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default ({ item, sign, handleButtonClick }) => {\r\n\r\n    return (\r\n        <button onClick={handleButtonClick} step={sign * item}>{ sign * item}</button>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ deleteClick, index }) => {\r\n    return (\r\n        <button id={index} onClick={deleteClick}>Delete</button>\r\n    );\r\n\r\n}","import React from \"react\";\r\n\r\nexport default ({ counterName, handleEditNameChange }) => {\r\n\r\n    return (\r\n        <input\r\n            data-testid=\"limit-input\"\r\n            type=\"text\"\r\n            name=\"edit\"\r\n            value={ counterName }\r\n            onChange={ handleEditNameChange }\r\n        />\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default ({ handleResetClick }) => {\r\n    return (\r\n        <button onClick={handleResetClick}>Reset</button>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\n\r\nexport default ({ name, stepOptionsClick }) => {\r\n\r\n    return (\r\n        <button name={name} onClick={stepOptionsClick}>Change Step Options?</button>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default ({ name, inputCloseClick }) => {\r\n\r\n    return (\r\n        <button name={name} onClick={inputCloseClick}>X</button>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport CounterRangeValidation from '../../helpers/CounterRangeValidation';\r\nimport _ from 'lodash';\r\nimport CounterRangeInput from \"./panel/CounterRangeInput\";\r\nimport DisplayCount from \"./panel/DisplayCount\";\r\nimport CounterStepButton from \"./panel/CounterStepButton\";\r\nimport ErrorNote from \"./panel/ErrorNote\";\r\nimport DeleteCounterButton from \"./menu/DeleteCounterButton\";\r\nimport EditCounterNameInput from \"./menu/EditCounterNameInput\";\r\nimport ResetCounterButton from \"./menu/ResetCounterButton\";\r\nimport CounterStepOptionsButton from \"./panel/CounterStepOptionsButton\";\r\nimport CloseInputRangeButton from \"./panel/CloseInputRangeButton\";\r\n\r\nexport default ({ id, name, value, deleteClick, updateClick, resetClick }) => {\r\n    const [ rangeLimits, setRangeLimits ] = useState({\r\n        lower : 1,\r\n        upper : 3,\r\n        errors: {\r\n            lower: \"\",\r\n            upper: \"\"\r\n        },\r\n        fieldStatus: {\r\n            upper: false,\r\n            lower: false\r\n        }\r\n    });\r\n    const [count, setCount] = useState(value);\r\n    const [counterName, setCounterName] = useState(name);\r\n    const [stepOptionsAvailable, setStepOptionsAvailable] = useState({negative: true, positive: true})\r\n\r\n    const handleRangeChange = e => {\r\n        const { name, value } = e.target;\r\n        let errors = rangeLimits.errors;\r\n        let fieldStatus = rangeLimits.fieldStatus;\r\n        setRangeLimits({ ...rangeLimits, [ name ]: +value });\r\n        let tempUpper = rangeLimits[ \"upper\" ];\r\n        let tempLower = rangeLimits[ \"lower\" ];\r\n        CounterRangeValidation (name, value, fieldStatus, tempUpper, tempLower, errors);\r\n    }\r\n\r\n    const handleStepOptionsClick = e => setStepOptionsAvailable({...stepOptionsAvailable, [e.target.name] : false });\r\n    const handleInputCloseClick = e => setStepOptionsAvailable({...stepOptionsAvailable, [e.target.name] : true });\r\n\r\n\r\n    console.log(stepOptionsAvailable);\r\n    const handleButtonClick = e => {\r\n        setCount(count + +e.target.getAttribute('step'));\r\n        updateClick(id, count + +e.target.getAttribute('step'));\r\n    }\r\n    const handleResetClick = e => {\r\n        setCount(0);\r\n        resetClick(id, 0);\r\n    }\r\n    const handleEditNameChange = e => setCounterName(e.target.value);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {`${id}. `}{counterName}\r\n                {rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={-1} item={item}/>)}\r\n                {stepOptionsAvailable.negative\r\n                ?\r\n                    <CounterStepOptionsButton name={\"negative\"} stepOptionsClick={handleStepOptionsClick}/>\r\n                :\r\n                    <>\r\n                        <CounterRangeInput limit={rangeLimits.lower} mode={rangeLimits.fieldStatus.lower} name=\"lower\" handleRangeChange={handleRangeChange}/>\r\n                        <CloseInputRangeButton name={\"negative\"} inputCloseClick={handleInputCloseClick}/>\r\n                    </>\r\n                }\r\n                <DisplayCount count={count}/>\r\n                {stepOptionsAvailable.positive\r\n                    ?\r\n                    <CounterStepOptionsButton name={\"positive\"} stepOptionsClick={handleStepOptionsClick}/>\r\n                    :\r\n                    <>\r\n                        <CloseInputRangeButton name={\"positive\"} inputCloseClick={handleInputCloseClick}/>\r\n                        <CounterRangeInput limit={rangeLimits.upper} mode={rangeLimits.fieldStatus.upper} name=\"upper\" handleRangeChange={handleRangeChange}/>\r\n                    </>\r\n                }\r\n                {rangeLimits.lower && rangeLimits.upper && _.range(rangeLimits.lower, rangeLimits.upper + 1, 1).map((item, idx) => <CounterStepButton key={idx} handleButtonClick={handleButtonClick} sign={1} item={item}/>)}\r\n\r\n                <br></br>\r\n                {rangeLimits.errors.lower && <ErrorNote error={rangeLimits.errors.lower}/>}\r\n                {rangeLimits.errors.upper && <ErrorNote error={rangeLimits.errors.upper}/>}\r\n\r\n            </div>\r\n            <div>\r\n                <DeleteCounterButton index={id} deleteClick={deleteClick}/>\r\n                <EditCounterNameInput handleEditNameChange={handleEditNameChange} counterName={counterName}/>\r\n                <ResetCounterButton handleResetClick={handleResetClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default (name, value, fieldStatus, tempUpper, tempLower, errors) => {\r\n    switch (name) {\r\n        case 'upper':\r\n            errors.upper =\r\n                isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) >= 10\r\n                    ? 'ERROR! Must be less than 10'\r\n                    : parseInt(value) < tempLower\r\n                        ? 'ERROR! Upper Limit Must be GREATER than Lower Limit'\r\n                        : ''\r\n            ;\r\n            fieldStatus.lower =\r\n                parseInt(value) < tempLower\r\n                    ? true\r\n                    : false\r\n            ;\r\n\r\n            break;\r\n        case 'lower':\r\n            errors.lower =\r\n                isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) < 1\r\n                    ? 'ERROR! Must be greater than zero'\r\n                    : parseInt(value) > tempUpper\r\n                        ? 'ERROR! Lower Limit Must be Less than Upper Limit'\r\n                        : ''\r\n            ;\r\n            fieldStatus.upper =\r\n                parseInt(value) > tempUpper\r\n                    ? true\r\n                    : false\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport CounterAddForm from './forms';\r\nimport CounterComponent from \"./counters\";\r\nimport NewCounterFormInputValidation from \"../helpers/NewCounterFormInputValidation\";\r\n\r\nexport default ({ name }) => {\r\n    const [counterList, setCounterList] = useState([\r\n        {\r\n            id: 1,\r\n            name: 'Default Counter',\r\n            value: 0\r\n        }\r\n    ]);\r\n    const [newCounter, setNewCounter] = useState({\r\n        name: 'Counter Name',\r\n        value: 50,\r\n        errors: {\r\n            name: \"\",\r\n            value: \"\"\r\n        }\r\n    });\r\n\r\n\r\n    const handleCounterInfoChange = e => {\r\n        const { name, value } = e.target;\r\n        setNewCounter({...newCounter, [ name ]: value});\r\n        const errors = newCounter.errors;\r\n        NewCounterFormInputValidation(name, value, errors);\r\n    };\r\n\r\n    const handleCounterAddClick = () => setCounterList([\r\n        ...counterList,\r\n        {\r\n            id: counterList.length + 1,\r\n            name: newCounter.name,\r\n            value: newCounter.value\r\n        }]\r\n    );\r\n\r\n    const handleCounterValueUpdate = (id, count) => setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    const handleCounterResetClick = (id, count) =>  setCounterList([...counterList].map(counter =>\r\n            counter.id === id ? { ...counter, value: count } : counter\r\n        ));\r\n\r\n    const handleCounterDeleteClick = e => {\r\n        setCounterList([...counterList].filter(item => item.id !== +e.target.id));\r\n        counterList.forEach((item, id) => {\r\n            item.id <= +e.target.id ? item.id = id + 1 : item.id = id;\r\n        });\r\n    };\r\n\r\n    //Event & State PROPS\r\n    const handleEventProps = {\r\n        addClick: handleCounterAddClick,\r\n        inputChange: handleCounterInfoChange,\r\n        deleteClick: handleCounterDeleteClick,\r\n        updateClick: handleCounterValueUpdate,\r\n        resetClick: handleCounterResetClick\r\n\r\n\r\n    };\r\n    const handleStateProps = {\r\n        id: newCounter.id,\r\n        name: newCounter.name,\r\n        value: newCounter.value,\r\n        errors: newCounter.errors\r\n    };\r\n\r\n    //Counter JSX\r\n    return (\r\n        <div>\r\n            <h1 className=\"header\">{name}</h1>\r\n            <hr></hr>\r\n            <h3>Total: {counterList.reduce((accumulator, counter) => accumulator + +counter.value, 0)}</h3>\r\n            {counterList.map((counter, idx) =>\r\n                <CounterComponent\r\n                    key={idx}\r\n                    deleteClick={handleEventProps.deleteClick}\r\n                    updateClick={handleEventProps.updateClick}\r\n                    resetClick={handleEventProps.resetClick}\r\n                    id={counter.id}\r\n                    name={counter.name}\r\n                    value={counter.value}\r\n                />)\r\n            }\r\n            <hr></hr>\r\n            <CounterAddForm {...handleEventProps} {...handleStateProps} />\r\n        </div>\r\n    );\r\n}","import {isEmptyValue} from \"enzyme/src/Utils\";\r\n\r\nexport default (name, value, errors) => {\r\n    switch (name) {\r\n        case 'value':\r\n            errors.value = isNaN(value) || Number.isInteger(value) || isEmptyValue(value) || value === \" \"\r\n                ? 'ERROR! Input must be an Integer'\r\n                : ''\r\n            ;\r\n            break;\r\n        case 'name':\r\n            errors.name = value.length <= 6\r\n                ? 'Counter name should be longer than 6 characters'\r\n                : ''\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport CounterMainWrapper from './components/MainCounterWrapper';\n\nfunction App() {\n    return (\n          <div>\n              <CounterMainWrapper name={\"Counters\"}/>\n          </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}